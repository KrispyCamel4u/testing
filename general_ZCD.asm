    LIST p=16f876
    #include p16f876.INC
    __CONFIG _FOSC_XT & _WDTE_OFF & _PWRTE_OFF & _CP_OFF
    
RES_VECT  CODE    0x0000            ; processor reset vector
    GOTO    START                   ; go to beginning of program

; TODO ADD INTERRUPTS HERE IF USED
INT_VECT CODE 0X004	; WHENEVER A ACTIVE INTERRUP OCCUR IT COMES TO THIS LOCATION    
    GOTO ISR		; JUMP TO INTERRUPT SERVICE ROUTINE 

ISR
    BCF PIR1,ADIF   ;FLAG CLEARED
    MOVF OLD,0	    ; OLD VALUE IS STORED IN WREG
    XORWF ADRESH,0  ; XOR WITH OLD VALUE
    MOVWF OLD	    ; MOV  THE RESULT TO OLD FOR CHECKING
    BTFSS OLD,7	    ; SKIP IF THE MSB IS 1 WHICH MEANS 2.5V HAS BEEN CROSSED	
    RETFIE	    ; IF NOT CROSSED THEN RETURN
    BSF PORTC,1	    ; IF CROSSED THEN START THE PULSE
;    MOVLW 0X5
;    MOVWF 0X20
;DELAY    
;    DECFSZ 0X20,1
;    GOTO DELAY
    RETFIE	    ; RETURN FROM INTERUPPT
;    
; WITH ADC A GENERAL PROGRAM
START
    BCF STATUS ,RP1
    BSF STATUS,RP0	;BANK 1
    MOVLW 0XFF
    MOVWF TRISA
    MOVLW 0X00
    MOVWF TRISC
    MOVLW 0X00
    MOVWF ADCON1
    BSF PIE1,ADIE	; ENABLE ADC INTERUPPT
    MOVLW 0X14	    
    MOVWF PR2		; SET THE PERIOD AS 20us
    BCF STATUS, RP0	;BANK 0
    MOVLW B'00000001'	
    MOVWF ADCON0	; ON THE ADC WITH AN0 INPUT AND DEFAULT VALUES
    BCF PIR1,ADIF
    MOVLW B'11000000'
    MOVWF INTCON	; ENABLE GIE AND PIE
    BSF T2CON,TMR2ON	; ON THE TIMER 2

OLD EQU 0X21		; DECLARE THE VARIABL OLD WHICH HOLDS THE PREVIOUS VALUE OF THE ADRESH
    MOVLW 0X0
    MOVWF OLD		; INITIALISE IT TO ZERO

AQUISITION	    
    BCF PORTC,1		; PULSE END
    CLRF TMR2		; TMR2 CLEARED
    BCF PIR1,TMR2IF	; CLEAR THE INTERUPPT FLAG OF TIMER2
ILOOP
    BTFSS PIR1,TMR2IF	; WAIT FOR AQUISITION TIME
    GOTO ILOOP
    BSF ADCON0,GO_DONE	; START ADC
WAIT
    BTFSS PIR1,ADIF	; WAIT FOR ADC CONVERSION
    GOTO WAIT
    MOVF ADRESH,0	
    MOVWF OLD		; MOVE THE VALUE TO OLD WHICH IS DONE AFTER SERVVICING THE ISR
    GOTO AQUISITION	
	
    END
;    
